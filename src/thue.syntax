%top {
    #include <iostream>
    #include <algorithm>
%}

%{
    #include "../Lexer.h"

    using neothue::position;

    static position marker;
%}

ws [ \t\n\r\f\v]
sep [:][:][=]

%x LHS SEP RHS STATE

%%

<INITIAL>. start(LHS); matcher().unput(chr());
<LHS>\n
<LHS>{ws}*{sep}{ws}* start(STATE);
<LHS>[^:\n]*/{sep} start(SEP); return ThueParserImplementation::make_STRING(str(), location());
<SEP>{sep} start(RHS); return ThueParserImplementation::make_SEPARATOR(location());
<RHS>[^\n]* start(LHS); return ThueParserImplementation::make_STRING(str(), location());
<RHS>[\n] start(LHS); return ThueParserImplementation::make_STRING("", location());
<STATE>[^\n](.|\n)*/[\n]? return ThueParserImplementation::make_STRING(str(), location());
<STATE>\n