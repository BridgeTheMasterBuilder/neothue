%{
    #include "../Lexer.h"

    using neothue::position;

    static position marker;
%}

ws [ \t\n\r\f\v]
lhs [^:\n]*
rhs [^\n]*
sep [:][:][=]
empty_production {ws}*{sep}{ws}*

%x LHS SEP RHS STATE

%%

<INITIAL>. start(LHS); matcher().unput(chr());
<LHS>[\n]
<LHS>{empty_production} start(STATE);
<LHS>{lhs}/{sep} start(SEP); return ThueParserImplementation::make_STRING(str(), location());
<SEP>{sep} start(RHS); return ThueParserImplementation::make_SEPARATOR(location());
<RHS>{rhs} start(LHS); return ThueParserImplementation::make_STRING(str(), location());
<RHS>[\n] start(LHS); return ThueParserImplementation::make_STRING("", location());
<STATE>[^\n](.|\n)*/[\n]? start(LHS); return ThueParserImplementation::make_STRING(str(), location());